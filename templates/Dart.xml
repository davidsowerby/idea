<templateSet group="Dart">
  <template name="bltc" value=" abstract class $NAME$ implements Built&lt;$NAME$, $NAME$Builder&gt; {&#10;     $END$// fields go here}&quot;,&#10;          &#10;     $NAME$._();&#10;         &#10;     factory $NAME$([updates($NAME$Builder b)]) = _$$$NAME$;&#10; }" description="Built Value Class" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="blth" value="library $NAME$;&#10;            &#10;import 'dart:convert';&#10;            &#10;import 'package:built_collection/built_collection.dart';&#10;import 'package:built_value/built_value.dart';&#10;import 'package:built_value/serializer.dart';&#10;            &#10;part '$NAME$.g.dart';" description="Built Value file header" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="blts" value="abstract class $NAME$ implements Built&lt;$NAME$, $NAME$Builder&gt; {&#10;     $END$// fields go here}&quot;,&#10;          &#10;     $NAME$._();&#10;         &#10;     factory $NAME$([updates($NAME$Builder b)]) = _$$$NAME$;&#10;     &#10;         String toJson() {&#10;        return json.encode(serializers.serializeWith($NAME$.serializer, this));&#10;    }&#10;&#10;    static $NAME$ fromJson(String jsonString) {&#10;        return serializers.deserializeWith($NAME$.serializer, json.decode(jsonString));&#10;    }&#10;    &#10;     static Serializer&lt;BuiltVehicle&gt; get serializer =&gt; _$$$NAME1$Serializer;&#10;&#10; }" description="Built Value (Serializable)" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME1" expression="decapitalize(NAME)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="bltz" value="library serializers;&#10;&#10;import 'package:built_value/serializer.dart';&#10;import 'package:built_value/standard_json_plugin.dart';&#10;&#10;&#10;part 'serializers.g.dart';&#10;&#10;@SerializersFor(const [&#10;  BuiltVehicle,&#10;])&#10;final Serializers serializers =&#10;(_$serializers.toBuilder()..addPlugin(StandardJsonPlugin())).build();" description="Serialzers file" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="blte" value="class $NAME$ extends EnumClass {&#10;  static const $NAME$ $E1$ = _$$$E1$;&#10;  static const $NAME$ $E2$ = _$$$E2$;&#10;  static const $NAME$ $E3$ = _$$$E3$;&#10;  static const $NAME$ $E4$ = _$$$E4$;&#10;&#10;&#10;  const $NAME$._(String name) : super(name);&#10;&#10;  static BuiltSet&lt;$NAME$&gt; get values =&gt; _$values;&#10;&#10;  static $NAME$ valueOf(String name) =&gt; _$valueOf(name);&#10;&#10;  static Serializer&lt;$NAME$&gt; get serializer =&gt; _$$$NAME1$Serializer;&#10;}" description="BuildValue Enum" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="E1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="E2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="E3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="E4" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="NAME1" expression="decapitalize(NAME)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
</templateSet>