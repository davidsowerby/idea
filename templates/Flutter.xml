<templateSet group="Flutter">
  <template name="provl" value="final $NAME$ $LNAME$ = Provider.of&lt;$NAME$&gt;(context);" description="Provider.of with listen" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LNAME" expression="decapitalize(NAME)" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="provn" value="Provider.of&lt;$NAME$&gt;(context, listen: false);" description="Provider.of no listen" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="cnp" value="ChangeNotifierProvider&lt;$NAME$&gt;(create: (_) =&gt; $NAME$(), child: $END$))" description="ChangeNotifierProvider" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
  <template name="untf" value="import 'package:flutter_test/flutter_test.dart';&#10;&#10; void main() {&#10;  group('Unit test', () {&#10;    setUpAll(() {});&#10;&#10;    tearDownAll(() {});&#10;&#10;    setUp(() {});&#10;&#10;    tearDown(() {});&#10;&#10;    test('output', () {&#10;      // given&#10;&#10;      // when&#10;&#10;      // then&#10;&#10;      expect(1, 0);&#10;    });&#10;  });&#10;}" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="DART" value="true" />
    </context>
  </template>
</templateSet>